-- NOTIFICATION_ARCH TABLE --
CREATE TABLE DM_NOTIFICATION_ARCH (
    NOTIFICATION_ID NUMBER(10) NOT NULL,
    NOTIFICATION_CONFIG_ID NUMBER(10) NOT NULL,
    TENANT_ID NUMBER(10) NOT NULL,
    DESCRIPTION VARCHAR2(1000) NULL,
    TYPE VARCHAR2(20) NOT NULL,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT PK_DM_NOTIFICATION_ARCH PRIMARY KEY (NOTIFICATION_ID)
);

CREATE SEQUENCE DM_NOTIFICATION_ARCH_seq START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE OR REPLACE TRIGGER DM_NOTIFICATION_ARCH_bir
    BEFORE INSERT ON DM_NOTIFICATION_ARCH
    FOR EACH ROW
BEGIN
    IF :NEW.NOTIFICATION_ID IS NULL THEN
SELECT DM_NOTIFICATION_ARCH_seq.NEXTVAL INTO :NEW.NOTIFICATION_ID FROM DUAL;
END IF;
END;
/

CREATE INDEX IDX_NOTF_CONFIG_ID ON DM_NOTIFICATION_ARCH(NOTIFICATION_CONFIG_ID);
CREATE INDEX IDX_NOTF_TENANT_ID ON DM_NOTIFICATION_ARCH(TENANT_ID);
CREATE INDEX IDX_NOTF_CREATED_TIMESTAMP ON DM_NOTIFICATION_ARCH(CREATED_TIMESTAMP);
/
-- NOTIFICATION TABLE END --

-- DM_NOTIFICATION_USER_ACTION_ARCH TABLE --
CREATE TABLE DM_NOTIFICATION_USER_ACTION_ARCH (
    ACTION_ID NUMBER(10) NOT NULL,
    NOTIFICATION_ID NUMBER(10) NOT NULL,
    USERNAME VARCHAR2(255) NOT NULL,
    IS_READ NUMBER(1) DEFAULT 0,
    ACTION_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT PK_DM_NOTIFICATION_USER_ACTION_ARCH PRIMARY KEY (ACTION_ID)
);

CREATE SEQUENCE DM_NOTIFICATION_USER_ACTION_ARCH_seq START WITH 1 INCREMENT BY 1 NOCACHE;

CREATE OR REPLACE TRIGGER DM_NOTIFICATION_USER_ACTION_ARCH_bir
    BEFORE INSERT ON DM_NOTIFICATION_USER_ACTION_ARCH
    FOR EACH ROW
BEGIN
    IF :NEW.ACTION_ID IS NULL THEN
SELECT DM_NOTIFICATION_USER_ACTION_ARCH_seq.NEXTVAL INTO :NEW.ACTION_ID FROM DUAL;
END IF;
END;
/
-- END DM_NOTIFICATION_USER_ACTION_ARCH TABLE --